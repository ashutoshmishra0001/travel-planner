{"ast":null,"code":"var _jsxFileName = \"D:\\\\travel-planner-app\\\\client\\\\src\\\\components\\\\main\\\\MapView.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\nimport { useTrips } from '../../context/TripContext';\nimport { icon } from 'leaflet';\n\n// Custom icon for map markers to make them stand out\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customMarkerIcon = icon({\n  iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\n  shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41]\n});\n\n/**\r\n * Renders an interactive map using React-Leaflet.\r\n * It displays markers for each destination and polylines to connect them,\r\n * visualizing the travel route.\r\n */\nconst MapView = () => {\n  _s();\n  const {\n    activeTrip\n  } = useTrips();\n\n  // Ensure there are destinations with coordinates before rendering the map\n  const destinationsWithCoords = (activeTrip === null || activeTrip === void 0 ? void 0 : activeTrip.destinations.filter(dest => dest.lat != null && dest.lng != null)) || [];\n  if (destinationsWithCoords.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white rounded-lg shadow-lg p-8 h-96 flex items-center justify-center text-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-xl font-bold mb-2 text-gray-800\",\n          children: \"Interactive Route Map\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500\",\n          children: \"Add destinations with coordinates to see your trip on the map!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Create an array of positions for the Polyline\n  const routeCoordinates = destinationsWithCoords.map(dest => [dest.lat, dest.lng]);\n\n  // Calculate the center of the map to focus on the trip area\n  const mapCenter = destinationsWithCoords.length > 0 ? [destinationsWithCoords[0].lat, destinationsWithCoords[0].lng] : [51.505, -0.09]; // Default center if no destinations\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-lg shadow-lg h-[600px] w-full overflow-hidden\",\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: mapCenter,\n      zoom: 4,\n      scrollWheelZoom: true,\n      style: {\n        height: '100%',\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n        pathOptions: {\n          color: 'blue'\n        },\n        positions: routeCoordinates\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), destinationsWithCoords.map(dest => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [dest.lat, dest.lng],\n        icon: customMarkerIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-bold\",\n            children: dest.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Day \", dest.day + 1]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)\n      }, dest._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(MapView, \"gAu+iRY78GnwvlEfAbgtCkfSg3s=\", false, function () {\n  return [useTrips];\n});\n_c = MapView;\nexport default MapView;\nvar _c;\n$RefreshReg$(_c, \"MapView\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","Polyline","useTrips","icon","jsxDEV","_jsxDEV","customMarkerIcon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","MapView","_s","activeTrip","destinationsWithCoords","destinations","filter","dest","lat","lng","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","routeCoordinates","map","mapCenter","center","zoom","scrollWheelZoom","style","height","width","attribution","url","pathOptions","color","positions","position","name","day","_id","_c","$RefreshReg$"],"sources":["D:/travel-planner-app/client/src/components/main/MapView.js"],"sourcesContent":["import React from 'react';\r\nimport { MapContainer, TileLayer, Marker, Popup, Polyline } from 'react-leaflet';\r\nimport { useTrips } from '../../context/TripContext';\r\nimport { icon } from 'leaflet';\r\n\r\n// Custom icon for map markers to make them stand out\r\nconst customMarkerIcon = icon({\r\n    iconUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png',\r\n    shadowUrl: 'https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png',\r\n    iconSize: [25, 41],\r\n    iconAnchor: [12, 41],\r\n    popupAnchor: [1, -34],\r\n    shadowSize: [41, 41]\r\n});\r\n\r\n\r\n/**\r\n * Renders an interactive map using React-Leaflet.\r\n * It displays markers for each destination and polylines to connect them,\r\n * visualizing the travel route.\r\n */\r\nconst MapView = () => {\r\n    const { activeTrip } = useTrips();\r\n\r\n    // Ensure there are destinations with coordinates before rendering the map\r\n    const destinationsWithCoords = activeTrip?.destinations.filter(dest => dest.lat != null && dest.lng != null) || [];\r\n    \r\n    if (destinationsWithCoords.length === 0) {\r\n        return (\r\n            <div className=\"bg-white rounded-lg shadow-lg p-8 h-96 flex items-center justify-center text-center\">\r\n                <div>\r\n                    <h3 className=\"text-xl font-bold mb-2 text-gray-800\">Interactive Route Map</h3>\r\n                    <p className=\"text-gray-500\">Add destinations with coordinates to see your trip on the map!</p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    // Create an array of positions for the Polyline\r\n    const routeCoordinates = destinationsWithCoords.map(dest => [dest.lat, dest.lng]);\r\n\r\n    // Calculate the center of the map to focus on the trip area\r\n    const mapCenter = destinationsWithCoords.length > 0\r\n        ? [destinationsWithCoords[0].lat, destinationsWithCoords[0].lng]\r\n        : [51.505, -0.09]; // Default center if no destinations\r\n\r\n    return (\r\n        <div className=\"bg-white rounded-lg shadow-lg h-[600px] w-full overflow-hidden\">\r\n            <MapContainer center={mapCenter} zoom={4} scrollWheelZoom={true} style={{ height: '100%', width: '100%' }}>\r\n                <TileLayer\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n\r\n                {/* Draw lines connecting the destinations */}\r\n                <Polyline pathOptions={{ color: 'blue' }} positions={routeCoordinates} />\r\n\r\n                {/* Place a marker for each destination */}\r\n                {destinationsWithCoords.map((dest) => (\r\n                    <Marker key={dest._id} position={[dest.lat, dest.lng]} icon={customMarkerIcon}>\r\n                        <Popup>\r\n                            <div className=\"font-bold\">{dest.name}</div>\r\n                            <div>Day {dest.day + 1}</div>\r\n                        </Popup>\r\n                    </Marker>\r\n                ))}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MapView;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}