{"ast":null,"code":"import axios from'axios';const API_URL=process.env.REACT_APP_API_URL||'http://localhost:5000/api';const api=axios.create({baseURL:API_URL});// Use an interceptor to dynamically set the Authorization header\n// before each request is sent. This is the most reliable way to handle auth.\napi.interceptors.request.use(config=>{try{const user=JSON.parse(localStorage.getItem('user'));if(user&&user.token){config.headers['Authorization']=\"Bearer \".concat(user.token);}}catch(error){console.error(\"Could not parse user from localStorage\",error);}return config;},error=>{return Promise.reject(error);});// --- Trip-related API calls ---\nexport const getAllTrips=()=>api.get('/trips');export const getTripById=id=>api.get(\"/trips/\".concat(id));export const createTrip=tripData=>api.post('/trips',tripData);export const updateTrip=(id,tripData)=>api.patch(\"/trips/\".concat(id),tripData);export const deleteTrip=id=>api.delete(\"/trips/\".concat(id));// --- Auth-related API calls ---\n// These don't need the interceptor but it doesn't hurt\nexport const login=(email,password)=>api.post('/auth/login',{email,password});export const signup=(username,email,password)=>api.post('/auth/register',{username,email,password});export default api;","map":{"version":3,"names":["axios","API_URL","process","env","REACT_APP_API_URL","api","create","baseURL","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","headers","concat","error","console","Promise","reject","getAllTrips","get","getTripById","id","createTrip","tripData","post","updateTrip","patch","deleteTrip","delete","login","email","password","signup","username"],"sources":["D:/travel-planner-app/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n    baseURL: API_URL,\r\n});\r\n\r\n// Use an interceptor to dynamically set the Authorization header\r\n// before each request is sent. This is the most reliable way to handle auth.\r\napi.interceptors.request.use((config) => {\r\n    try {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        if (user && user.token) {\r\n            config.headers['Authorization'] = `Bearer ${user.token}`;\r\n        }\r\n    } catch (error) {\r\n        console.error(\"Could not parse user from localStorage\", error);\r\n    }\r\n    return config;\r\n}, (error) => {\r\n    return Promise.reject(error);\r\n});\r\n\r\n// --- Trip-related API calls ---\r\nexport const getAllTrips = () => api.get('/trips');\r\nexport const getTripById = (id) => api.get(`/trips/${id}`);\r\nexport const createTrip = (tripData) => api.post('/trips', tripData);\r\nexport const updateTrip = (id, tripData) => api.patch(`/trips/${id}`, tripData);\r\nexport const deleteTrip = (id) => api.delete(`/trips/${id}`);\r\n\r\n// --- Auth-related API calls ---\r\n// These don't need the interceptor but it doesn't hurt\r\nexport const login = (email, password) => api.post('/auth/login', { email, password });\r\nexport const signup = (username, email, password) => api.post('/auth/register', { username, email, password });\r\n\r\nexport default api;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAE5E,KAAM,CAAAC,GAAG,CAAGL,KAAK,CAACM,MAAM,CAAC,CACrBC,OAAO,CAAEN,OACb,CAAC,CAAC,CAEF;AACA;AACAI,GAAG,CAACG,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,EAAK,CACrC,GAAI,CACA,KAAM,CAAAC,IAAI,CAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAAC,CACrD,GAAIJ,IAAI,EAAIA,IAAI,CAACK,KAAK,CAAE,CACpBN,MAAM,CAACO,OAAO,CAAC,eAAe,CAAC,WAAAC,MAAA,CAAaP,IAAI,CAACK,KAAK,CAAE,CAC5D,CACJ,CAAE,MAAOG,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,wCAAwC,CAAEA,KAAK,CAAC,CAClE,CACA,MAAO,CAAAT,MAAM,CACjB,CAAC,CAAGS,KAAK,EAAK,CACV,MAAO,CAAAE,OAAO,CAACC,MAAM,CAACH,KAAK,CAAC,CAChC,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAI,WAAW,CAAGA,CAAA,GAAMnB,GAAG,CAACoB,GAAG,CAAC,QAAQ,CAAC,CAClD,MAAO,MAAM,CAAAC,WAAW,CAAIC,EAAE,EAAKtB,GAAG,CAACoB,GAAG,WAAAN,MAAA,CAAWQ,EAAE,CAAE,CAAC,CAC1D,MAAO,MAAM,CAAAC,UAAU,CAAIC,QAAQ,EAAKxB,GAAG,CAACyB,IAAI,CAAC,QAAQ,CAAED,QAAQ,CAAC,CACpE,MAAO,MAAM,CAAAE,UAAU,CAAGA,CAACJ,EAAE,CAAEE,QAAQ,GAAKxB,GAAG,CAAC2B,KAAK,WAAAb,MAAA,CAAWQ,EAAE,EAAIE,QAAQ,CAAC,CAC/E,MAAO,MAAM,CAAAI,UAAU,CAAIN,EAAE,EAAKtB,GAAG,CAAC6B,MAAM,WAAAf,MAAA,CAAWQ,EAAE,CAAE,CAAC,CAE5D;AACA;AACA,MAAO,MAAM,CAAAQ,KAAK,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAKhC,GAAG,CAACyB,IAAI,CAAC,aAAa,CAAE,CAAEM,KAAK,CAAEC,QAAS,CAAC,CAAC,CACtF,MAAO,MAAM,CAAAC,MAAM,CAAGA,CAACC,QAAQ,CAAEH,KAAK,CAAEC,QAAQ,GAAKhC,GAAG,CAACyB,IAAI,CAAC,gBAAgB,CAAE,CAAES,QAAQ,CAAEH,KAAK,CAAEC,QAAS,CAAC,CAAC,CAE9G,cAAe,CAAAhC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}