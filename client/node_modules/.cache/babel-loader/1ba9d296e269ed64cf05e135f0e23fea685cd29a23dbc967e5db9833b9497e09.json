{"ast":null,"code":"var _jsxFileName = \"D:\\\\travel-planner-app\\\\client\\\\src\\\\context\\\\TripContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport * as api from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TripContext = /*#__PURE__*/createContext();\nexport const useTrips = () => {\n  _s();\n  return useContext(TripContext);\n};\n_s(useTrips, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const TripProvider = ({\n  children\n}) => {\n  _s2();\n  const [trips, setTrips] = useState([]);\n  const [activeTrip, setActiveTrip] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Initial load - In a real app, you would log in first\n  // For this demo, we'll check for trips and create a sample one if none exist.\n  useEffect(() => {\n    // This is a placeholder for a real auth token check\n    const tempAuthToken = '...';\n    if (tempAuthToken) {\n      const loadTrips = async () => {\n        try {\n          const {\n            data\n          } = await api.fetchTrips();\n          if (data.length > 0) {\n            setTrips(data);\n            setActiveTrip(data[0]);\n          } else {\n            // If no trips, you might want to show an empty state\n            setActiveTrip(null);\n          }\n        } catch (error) {\n          console.error(\"Failed to fetch trips\", error);\n          setActiveTrip(null);\n        } finally {\n          setLoading(false);\n        }\n      };\n      loadTrips();\n    }\n  }, []);\n  const refreshActiveTrip = updatedTrip => {\n    setActiveTrip(updatedTrip);\n    setTrips(trips.map(trip => trip._id === updatedTrip._id ? updatedTrip : trip));\n  };\n  const value = {\n    trips,\n    setTrips,\n    activeTrip,\n    setActiveTrip,\n    loading,\n    refreshActiveTrip\n  };\n  return /*#__PURE__*/_jsxDEV(TripContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s2(TripProvider, \"546nep1nfwEIdQ+gstmc3+C0ns0=\");\n_c = TripProvider;\nvar _c;\n$RefreshReg$(_c, \"TripProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","api","jsxDEV","_jsxDEV","TripContext","useTrips","_s","TripProvider","children","_s2","trips","setTrips","activeTrip","setActiveTrip","loading","setLoading","tempAuthToken","loadTrips","data","fetchTrips","length","error","console","refreshActiveTrip","updatedTrip","map","trip","_id","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/travel-planner-app/client/src/context/TripContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport * as api from '../api';\r\n\r\nconst TripContext = createContext();\r\n\r\nexport const useTrips = () => useContext(TripContext);\r\n\r\nexport const TripProvider = ({ children }) => {\r\n    const [trips, setTrips] = useState([]);\r\n    const [activeTrip, setActiveTrip] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    // Initial load - In a real app, you would log in first\r\n    // For this demo, we'll check for trips and create a sample one if none exist.\r\n    useEffect(() => {\r\n        // This is a placeholder for a real auth token check\r\n        const tempAuthToken = '...';\r\n        if (tempAuthToken) {\r\n            const loadTrips = async () => {\r\n                try {\r\n                    const { data } = await api.fetchTrips();\r\n                    if (data.length > 0) {\r\n                        setTrips(data);\r\n                        setActiveTrip(data[0]);\r\n                    } else {\r\n                        // If no trips, you might want to show an empty state\r\n                        setActiveTrip(null);\r\n                    }\r\n                } catch (error) {\r\n                    console.error(\"Failed to fetch trips\", error);\r\n                    setActiveTrip(null);\r\n                } finally {\r\n                    setLoading(false);\r\n                }\r\n            };\r\n            loadTrips();\r\n        }\r\n    }, []);\r\n\r\n    const refreshActiveTrip = (updatedTrip) => {\r\n        setActiveTrip(updatedTrip);\r\n        setTrips(trips.map(trip => trip._id === updatedTrip._id ? updatedTrip : trip));\r\n    }\r\n\r\n    const value = {\r\n        trips,\r\n        setTrips,\r\n        activeTrip,\r\n        setActiveTrip,\r\n        loading,\r\n        refreshActiveTrip\r\n    };\r\n\r\n    return (\r\n        <TripContext.Provider value={value}>\r\n            {children}\r\n        </TripContext.Provider>\r\n    );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AAC7E,OAAO,KAAKC,GAAG,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,QAAQ,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMP,UAAU,CAACK,WAAW,CAAC;AAAA;AAACE,EAAA,CAAzCD,QAAQ;AAErB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC1C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA;EACAE,SAAS,CAAC,MAAM;IACZ;IACA,MAAMgB,aAAa,GAAG,KAAK;IAC3B,IAAIA,aAAa,EAAE;MACf,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;QAC1B,IAAI;UACA,MAAM;YAAEC;UAAK,CAAC,GAAG,MAAMjB,GAAG,CAACkB,UAAU,CAAC,CAAC;UACvC,IAAID,IAAI,CAACE,MAAM,GAAG,CAAC,EAAE;YACjBT,QAAQ,CAACO,IAAI,CAAC;YACdL,aAAa,CAACK,IAAI,CAAC,CAAC,CAAC,CAAC;UAC1B,CAAC,MAAM;YACH;YACAL,aAAa,CAAC,IAAI,CAAC;UACvB;QACJ,CAAC,CAAC,OAAOQ,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;UAC7CR,aAAa,CAAC,IAAI,CAAC;QACvB,CAAC,SAAS;UACNE,UAAU,CAAC,KAAK,CAAC;QACrB;MACJ,CAAC;MACDE,SAAS,CAAC,CAAC;IACf;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,iBAAiB,GAAIC,WAAW,IAAK;IACvCX,aAAa,CAACW,WAAW,CAAC;IAC1Bb,QAAQ,CAACD,KAAK,CAACe,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKH,WAAW,CAACG,GAAG,GAAGH,WAAW,GAAGE,IAAI,CAAC,CAAC;EAClF,CAAC;EAED,MAAME,KAAK,GAAG;IACVlB,KAAK;IACLC,QAAQ;IACRC,UAAU;IACVC,aAAa;IACbC,OAAO;IACPS;EACJ,CAAC;EAED,oBACIpB,OAAA,CAACC,WAAW,CAACyB,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAC9BA;EAAQ;IAAAsB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAACxB,GAAA,CAnDWF,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}