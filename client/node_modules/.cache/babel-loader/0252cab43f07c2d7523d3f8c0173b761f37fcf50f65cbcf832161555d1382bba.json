{"ast":null,"code":"var _jsxFileName = \"D:\\\\travel-planner-app\\\\client\\\\src\\\\components\\\\MapComponent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { GoogleMap, useLoadScript, Marker, Polyline } from '@react-google-maps/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst mapContainerStyle = {\n  width: '100%',\n  height: '100%'\n};\n\n// A default center for the map when no route is available.\nconst defaultCenter = {\n  lat: 48.8566,\n  // Paris, France\n  lng: 2.3522\n};\nconst mapOptions = {\n  disableDefaultUI: true,\n  zoomControl: true\n};\nconst MapComponent = ({\n  route\n}) => {\n  _s();\n  const {\n    isLoaded,\n    loadError\n  } = useLoadScript({\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n    // Use environment variable for API key\n    libraries: [\"places\"]\n  });\n  if (loadError) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error loading maps\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 84\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 27\n  }, this);\n  if (!isLoaded) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex items-center justify-center h-full\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Maps...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 84\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 27\n  }, this);\n\n  // Create the path for the Polyline\n  const path = route.map(loc => ({\n    lat: loc.lat,\n    lng: loc.lng\n  }));\n  return /*#__PURE__*/_jsxDEV(GoogleMap, {\n    mapContainerStyle: mapContainerStyle,\n    zoom: route && route.length > 0 ? 8 : 4,\n    center: route && route.length > 0 ? {\n      lat: route[0].lat,\n      lng: route[0].lng\n    } : defaultCenter,\n    options: mapOptions,\n    children: [route && route.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: {\n        lat: location.lat,\n        lng: location.lng\n      },\n      label: {\n        text: `${index + 1}`,\n        color: \"white\"\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this)), path.length > 1 && /*#__PURE__*/_jsxDEV(Polyline, {\n      path: path,\n      options: {\n        strokeColor: '#4f46e5',\n        strokeOpacity: 1.0,\n        strokeWeight: 3\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(MapComponent, \"Cye17iwlLw61yP2k5hqy29yMy+o=\", false, function () {\n  return [useLoadScript];\n});\n_c = MapComponent;\nexport default _c2 = /*#__PURE__*/React.memo(MapComponent);\nvar _c, _c2;\n$RefreshReg$(_c, \"MapComponent\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"names":["React","GoogleMap","useLoadScript","Marker","Polyline","jsxDEV","_jsxDEV","mapContainerStyle","width","height","defaultCenter","lat","lng","mapOptions","disableDefaultUI","zoomControl","MapComponent","route","_s","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","map","loc","zoom","length","center","options","location","index","position","label","text","color","strokeColor","strokeOpacity","strokeWeight","_c","_c2","memo","$RefreshReg$"],"sources":["D:/travel-planner-app/client/src/components/MapComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleMap, useLoadScript, Marker, Polyline } from '@react-google-maps/api';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '100%',\r\n};\r\n\r\n// A default center for the map when no route is available.\r\nconst defaultCenter = {\r\n  lat: 48.8566, // Paris, France\r\n  lng: 2.3522,\r\n};\r\n\r\nconst mapOptions = {\r\n    disableDefaultUI: true,\r\n    zoomControl: true,\r\n};\r\n\r\nconst MapComponent = ({ route }) => {\r\n    const { isLoaded, loadError } = useLoadScript({\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY, // Use environment variable for API key\r\n        libraries: [\"places\"],\r\n    });\r\n\r\n    if (loadError) return <div className=\"flex items-center justify-center h-full\"><p>Error loading maps</p></div>;\r\n    if (!isLoaded) return <div className=\"flex items-center justify-center h-full\"><p>Loading Maps...</p></div>;\r\n    \r\n    // Create the path for the Polyline\r\n    const path = route.map(loc => ({ lat: loc.lat, lng: loc.lng }));\r\n\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={mapContainerStyle}\r\n            zoom={route && route.length > 0 ? 8 : 4}\r\n            center={route && route.length > 0 ? { lat: route[0].lat, lng: route[0].lng } : defaultCenter}\r\n            options={mapOptions}\r\n        >\r\n            {route && route.map((location, index) => (\r\n                <Marker \r\n                    key={index} \r\n                    position={{ lat: location.lat, lng: location.lng }} \r\n                    label={{ text: `${index + 1}`, color: \"white\" }}\r\n                />\r\n            ))}\r\n            {path.length > 1 && (\r\n                 <Polyline\r\n                    path={path}\r\n                    options={{\r\n                        strokeColor: '#4f46e5',\r\n                        strokeOpacity: 1.0,\r\n                        strokeWeight: 3,\r\n                    }}\r\n                />\r\n            )}\r\n        </GoogleMap>\r\n    );\r\n};\r\n\r\nexport default React.memo(MapComponent);"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}