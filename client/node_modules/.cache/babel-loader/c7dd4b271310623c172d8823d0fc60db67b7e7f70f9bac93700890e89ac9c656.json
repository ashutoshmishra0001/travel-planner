{"ast":null,"code":"import React from'react';import{GoogleMap,useLoadScript,Marker,Polyline}from'@react-google-maps/api';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const mapContainerStyle={width:'100%',height:'100%'};// A default center for the map when no route is available.\nconst defaultCenter={lat:48.8566,// Paris, France\nlng:2.3522};const mapOptions={disableDefaultUI:true,zoomControl:true};const MapComponent=_ref=>{let{route}=_ref;const{isLoaded,loadError}=useLoadScript({googleMapsApiKey:process.env.REACT_APP_GOOGLE_MAPS_API_KEY,// Use environment variable for API key\nlibraries:[\"places\"]});if(loadError)return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Error loading maps\"})});if(!isLoaded)return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-full\",children:/*#__PURE__*/_jsx(\"p\",{children:\"Loading Maps...\"})});// Create the path for the Polyline\nconst path=route.map(loc=>({lat:loc.lat,lng:loc.lng}));return/*#__PURE__*/_jsxs(GoogleMap,{mapContainerStyle:mapContainerStyle,zoom:route&&route.length>0?8:4,center:route&&route.length>0?{lat:route[0].lat,lng:route[0].lng}:defaultCenter,options:mapOptions,children:[route&&route.map((location,index)=>/*#__PURE__*/_jsx(Marker,{position:{lat:location.lat,lng:location.lng},label:{text:\"\".concat(index+1),color:\"white\"}},index)),path.length>1&&/*#__PURE__*/_jsx(Polyline,{path:path,options:{strokeColor:'#4f46e5',strokeOpacity:1.0,strokeWeight:3}})]});};export default/*#__PURE__*/React.memo(MapComponent);","map":{"version":3,"names":["React","GoogleMap","useLoadScript","Marker","Polyline","jsx","_jsx","jsxs","_jsxs","mapContainerStyle","width","height","defaultCenter","lat","lng","mapOptions","disableDefaultUI","zoomControl","MapComponent","_ref","route","isLoaded","loadError","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","libraries","className","children","path","map","loc","zoom","length","center","options","location","index","position","label","text","concat","color","strokeColor","strokeOpacity","strokeWeight","memo"],"sources":["D:/travel-planner-app/client/src/components/MapComponent.js"],"sourcesContent":["import React from 'react';\r\nimport { GoogleMap, useLoadScript, Marker, Polyline } from '@react-google-maps/api';\r\n\r\nconst mapContainerStyle = {\r\n  width: '100%',\r\n  height: '100%',\r\n};\r\n\r\n// A default center for the map when no route is available.\r\nconst defaultCenter = {\r\n  lat: 48.8566, // Paris, France\r\n  lng: 2.3522,\r\n};\r\n\r\nconst mapOptions = {\r\n    disableDefaultUI: true,\r\n    zoomControl: true,\r\n};\r\n\r\nconst MapComponent = ({ route }) => {\r\n    const { isLoaded, loadError } = useLoadScript({\r\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY, // Use environment variable for API key\r\n        libraries: [\"places\"],\r\n    });\r\n\r\n    if (loadError) return <div className=\"flex items-center justify-center h-full\"><p>Error loading maps</p></div>;\r\n    if (!isLoaded) return <div className=\"flex items-center justify-center h-full\"><p>Loading Maps...</p></div>;\r\n    \r\n    // Create the path for the Polyline\r\n    const path = route.map(loc => ({ lat: loc.lat, lng: loc.lng }));\r\n\r\n    return (\r\n        <GoogleMap\r\n            mapContainerStyle={mapContainerStyle}\r\n            zoom={route && route.length > 0 ? 8 : 4}\r\n            center={route && route.length > 0 ? { lat: route[0].lat, lng: route[0].lng } : defaultCenter}\r\n            options={mapOptions}\r\n        >\r\n            {route && route.map((location, index) => (\r\n                <Marker \r\n                    key={index} \r\n                    position={{ lat: location.lat, lng: location.lng }} \r\n                    label={{ text: `${index + 1}`, color: \"white\" }}\r\n                />\r\n            ))}\r\n            {path.length > 1 && (\r\n                 <Polyline\r\n                    path={path}\r\n                    options={{\r\n                        strokeColor: '#4f46e5',\r\n                        strokeOpacity: 1.0,\r\n                        strokeWeight: 3,\r\n                    }}\r\n                />\r\n            )}\r\n        </GoogleMap>\r\n    );\r\n};\r\n\r\nexport default React.memo(MapComponent);"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,SAAS,CAAEC,aAAa,CAAEC,MAAM,CAAEC,QAAQ,KAAQ,wBAAwB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEpF,KAAM,CAAAC,iBAAiB,CAAG,CACxBC,KAAK,CAAE,MAAM,CACbC,MAAM,CAAE,MACV,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAG,CACpBC,GAAG,CAAE,OAAO,CAAE;AACdC,GAAG,CAAE,MACP,CAAC,CAED,KAAM,CAAAC,UAAU,CAAG,CACfC,gBAAgB,CAAE,IAAI,CACtBC,WAAW,CAAE,IACjB,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAe,IAAd,CAAEC,KAAM,CAAC,CAAAD,IAAA,CAC3B,KAAM,CAAEE,QAAQ,CAAEC,SAAU,CAAC,CAAGpB,aAAa,CAAC,CAC1CqB,gBAAgB,CAAEC,OAAO,CAACC,GAAG,CAACC,6BAA6B,CAAE;AAC7DC,SAAS,CAAE,CAAC,QAAQ,CACxB,CAAC,CAAC,CAEF,GAAIL,SAAS,CAAE,mBAAOhB,IAAA,QAAKsB,SAAS,CAAC,yCAAyC,CAAAC,QAAA,cAACvB,IAAA,MAAAuB,QAAA,CAAG,oBAAkB,CAAG,CAAC,CAAK,CAAC,CAC9G,GAAI,CAACR,QAAQ,CAAE,mBAAOf,IAAA,QAAKsB,SAAS,CAAC,yCAAyC,CAAAC,QAAA,cAACvB,IAAA,MAAAuB,QAAA,CAAG,iBAAe,CAAG,CAAC,CAAK,CAAC,CAE3G;AACA,KAAM,CAAAC,IAAI,CAAGV,KAAK,CAACW,GAAG,CAACC,GAAG,GAAK,CAAEnB,GAAG,CAAEmB,GAAG,CAACnB,GAAG,CAAEC,GAAG,CAAEkB,GAAG,CAAClB,GAAI,CAAC,CAAC,CAAC,CAE/D,mBACIN,KAAA,CAACP,SAAS,EACNQ,iBAAiB,CAAEA,iBAAkB,CACrCwB,IAAI,CAAEb,KAAK,EAAIA,KAAK,CAACc,MAAM,CAAG,CAAC,CAAG,CAAC,CAAG,CAAE,CACxCC,MAAM,CAAEf,KAAK,EAAIA,KAAK,CAACc,MAAM,CAAG,CAAC,CAAG,CAAErB,GAAG,CAAEO,KAAK,CAAC,CAAC,CAAC,CAACP,GAAG,CAAEC,GAAG,CAAEM,KAAK,CAAC,CAAC,CAAC,CAACN,GAAI,CAAC,CAAGF,aAAc,CAC7FwB,OAAO,CAAErB,UAAW,CAAAc,QAAA,EAEnBT,KAAK,EAAIA,KAAK,CAACW,GAAG,CAAC,CAACM,QAAQ,CAAEC,KAAK,gBAChChC,IAAA,CAACH,MAAM,EAEHoC,QAAQ,CAAE,CAAE1B,GAAG,CAAEwB,QAAQ,CAACxB,GAAG,CAAEC,GAAG,CAAEuB,QAAQ,CAACvB,GAAI,CAAE,CACnD0B,KAAK,CAAE,CAAEC,IAAI,IAAAC,MAAA,CAAKJ,KAAK,CAAG,CAAC,CAAE,CAAEK,KAAK,CAAE,OAAQ,CAAE,EAF3CL,KAGR,CACJ,CAAC,CACDR,IAAI,CAACI,MAAM,CAAG,CAAC,eACX5B,IAAA,CAACF,QAAQ,EACN0B,IAAI,CAAEA,IAAK,CACXM,OAAO,CAAE,CACLQ,WAAW,CAAE,SAAS,CACtBC,aAAa,CAAE,GAAG,CAClBC,YAAY,CAAE,CAClB,CAAE,CACL,CACJ,EACM,CAAC,CAEpB,CAAC,CAED,2BAAe9C,KAAK,CAAC+C,IAAI,CAAC7B,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}